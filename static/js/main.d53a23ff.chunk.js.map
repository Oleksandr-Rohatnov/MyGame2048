{"version":3,"sources":["Components/GamePanel/GamePanel.js","Components/ServiceComponents/ServiceComponents.js","Components/GameField/GameField.js","App.js","reportWebVitals.js","index.js"],"names":["GamePanel","score","bestScore","newGameFunction","className","type","onClick","name","id","classNameItem","item","classNames","randomNumber","Math","floor","random","arrayCheck","arr","arr2","count","result","i","length","j","winCheck","some","x","y","generateNewField","arrays","Array","fill","arrayRandom","arrayRandom2","generateNumbers","refresh","z","GameField","gameStatus","winStatus","App","state","refreshArray","newArr","setState","newGame","swipeLeft","event","code","horizontallySwipe","swipeRight","swipeUp","VerticalSwipe","swipeDown","document","addEventListener","this","swipe","stateArray","exitArray","filterElements","filter","elem","additionDoneElements","m","push","emptyElements","n","setTimeout","exitArrays","rotateArray","rotateBackArrays","filters","number","filtered","h","emptyArray","rotateSomeArray","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d53a23ff.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\n\nexport const GamePanel = ({score, bestScore, newGameFunction}) => (\n  <div className=\"gamePanel\">\n    <div className=\"gamePanel__scores\">\n      <h1>2048</h1>\n      <h2>Score:{score}</h2>\n      <h3>Best Score:{bestScore}</h3>\n    </div>\n    <button\n      type=\"button\"\n      onClick={() => newGameFunction()}\n      name=\"btn\"\n      id=\"newGame\"\n    >\n      NEW GAME\n    </button>\n  </div>\n)\n\nGamePanel.propTypes = {\n  score: PropTypes.number.isRequired,\n  bestScore: PropTypes.number.isRequired,\n  newGameFunction: PropTypes.func.isRequired,\n}","import classNames from 'classnames'\n\nexport function classNameItem(item) {\n  return classNames(\"gameBlock__item\", {\n    \"gameBlock__item--2\": item === 2,\n    \"gameBlock__item--4\": item === 4,\n    \"gameBlock__item--8\": item === 8,\n    \"gameBlock__item--16\": item === 16,\n    \"gameBlock__item--32\": item === 32,\n    \"gameBlock__item--64\": item === 64,\n    \"gameBlock__item--128\": item === 128,\n    \"gameBlock__item--256\": item === 256,\n    \"gameBlock__item--512\": item === 512,\n    \"gameBlock__item--1024\": item === 1024,\n    \"gameBlock__item--2048\": item === 2048,\n  })\n}\n\nfunction randomNumber (){\n  return Math.floor(Math.random() * 4)\n}\n\n\n///CHECKING...\n\nexport function arrayCheck(arr, arr2) {\n  let count = 0;\n  if (!arr2) {\n    for (let i = 0; i < arr.length; i++){\n      for (let j = 0; j < arr.length; j++){\n        if (arr[i][j]) {\n          count++\n        }\n      }\n    }\n    return count === 16 ? false : true;\n  } else {\n    let result = true\n    for (let i = 0; i < arr.length; i++){\n      for (let j = 0; j < arr.length; j++){\n        if (arr[i][j] !== arr2[i][j]) {\n          result = false;\n        }\n      }\n    }\n    return result;\n  }\n}\n\nexport function winCheck(arr) {\n  return arr.some(x => x.some(y => y === 2048))\n}\n\n///GENERATIONS...\n\nexport function generateNewField () {\n  let arrays = new Array(4).fill(new Array(4))\n  let arrayRandom = new Array(4)\n  let arrayRandom2 = new Array(4)\n  arrayRandom[randomNumber()] = 2\n  arrayRandom2[randomNumber()] = 2\n  arrays[randomNumber()] = arrayRandom\n  arrays[randomNumber()] = arrayRandom2\n  return arrays\n}\n\nexport function generateNumbers(arr, refresh) {\n  let x = randomNumber();\n  let y = randomNumber();\n  let z = arr;\n\n  if (!z[x][y]){\n    z[x][y] = 2\n    refresh(z)\n  } else generateNumbers(z, refresh)\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames'\nimport { classNameItem } from '../ServiceComponents/ServiceComponents'\n\nexport const GameField = ({arrays, gameStatus, winStatus}) => (\n  <div className=\"gameBlock\">\n    <div className={classNameItem(arrays[0][0])}>{arrays[0][0]}</div>\n    <div className={classNameItem(arrays[0][1])}>{arrays[0][1]}</div>\n    <div className={classNameItem(arrays[0][2])}>{arrays[0][2]}</div>\n    <div className={classNameItem(arrays[0][3])}>{arrays[0][3]}</div>\n\n    <div className={classNameItem(arrays[1][0])}>{arrays[1][0]}</div>\n    <div className={classNameItem(arrays[1][1])}>{arrays[1][1]}</div>\n    <div className={classNameItem(arrays[1][2])}>{arrays[1][2]}</div>\n    <div className={classNameItem(arrays[1][3])}>{arrays[1][3]}</div>\n\n    <div className={classNameItem(arrays[2][0])}>{arrays[2][0]}</div>\n    <div className={classNameItem(arrays[2][1])}>{arrays[2][1]}</div>\n    <div className={classNameItem(arrays[2][2])}>{arrays[2][2]}</div>\n    <div className={classNameItem(arrays[2][3])}>{arrays[2][3]}</div>\n\n    <div className={classNameItem(arrays[3][0])}>{arrays[3][0]}</div>\n    <div className={classNameItem(arrays[3][1])}>{arrays[3][1]}</div>\n    <div className={classNameItem(arrays[3][2])}>{arrays[3][2]}</div>\n    <div className={classNameItem(arrays[3][3])}>{arrays[3][3]}</div>\n    <div className={classNames('gameOver',{'gameOver--hidden': gameStatus})}>Game Over</div>\n    <div className={classNames('win',{'win--hidden': !winStatus})}>You win!!!</div>\n  </div>\n);\n\nGameField.propTypes = {\n  arrays: PropTypes.arrayOf(PropTypes.array.isRequired).isRequired,\n  gameStatus: PropTypes.func.isRequired,\n  winStatus: PropTypes.func.isRequired,\n}","import React from 'react'\nimport './App.scss';\nimport { GamePanel } from './Components/GamePanel/GamePanel';\nimport { GameField } from './Components/GameField/GameField';\nimport { arrayCheck, winCheck, generateNewField, generateNumbers } from './Components/ServiceComponents/ServiceComponents';\n\nclass App extends React.Component {\n  state = {\n    arrays: generateNewField(),\n    score: 0,\n    bestScore: 0,\n    gameStatus: true,\n    winStatus: false,\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.swipeLeft)\n    document.addEventListener('keydown', this.swipeRight)\n    document.addEventListener('keydown', this.swipeUp)\n    document.addEventListener('keydown', this.swipeDown)\n  }\n\n  // NewGame and refresh arrays\n\n  refreshArray = (newArr) => {\n    this.setState({\n      arrays: newArr,\n    })\n  }\n  \n  newGame = () => {\n    this.setState(({score, bestScore}) => ({\n      arrays: generateNewField(),\n      bestScore: score > bestScore ? score : bestScore,\n      score: 0,\n      gameStatus: true,\n      winStatus: false,\n    }))\n  }\n\n  //SwipesFunctions\n\n  horizontallySwipe(swipe){\n    let stateArray = [...this.state.arrays]\n    let exitArray = []\n  \n    for (let i = 0; i < stateArray.length; i++){\n     let filterElements = stateArray[i].filter(elem => elem);\n     let additionDoneElements = []\n     for (let m = 0; m < filterElements.length; m++){\n        if (filterElements[m] === filterElements[m + 1]){\n          additionDoneElements.push(filterElements[m] * 2)\n          this.setState(state => {\n            state.score += filterElements[m]\n          })\n          m++\n        } else {\n          additionDoneElements.push(filterElements[m])\n        }\n     }\n     let emptyElements = new Array(4 - additionDoneElements.length);\n  \n     if (swipe === 'left'){\n      for (let n = 0; n < emptyElements.length; n++){\n        additionDoneElements.push(emptyElements[n])\n       }\n       exitArray.push(additionDoneElements)\n     } else {\n        for (let n = 0; n < additionDoneElements.length; n++){\n          emptyElements.push(additionDoneElements[n])\n        }\n        exitArray.push(emptyElements)\n      }\n    }\n\n    if (winCheck(exitArray)) {\n      this.setState({\n        winStatus: true\n      })\n    }\n\n    if (!arrayCheck(exitArray, stateArray)) {\n      this.refreshArray(exitArray)\n      setTimeout(() => {\n        generateNumbers(this.state.arrays, this.refreshArray)\n      },300)\n    }\n      \n    return arrayCheck(exitArray)\n  }\n\n  VerticalSwipe(swipe) {\n    let stateArray = [...this.state.arrays]\n    let exitArrays = []\n    let rotateArray = [[],[],[],[]]\n  \n    for (let i = 0; i < stateArray.length; i++) {\n      rotateArray[0].push(stateArray[i][0])\n      rotateArray[1].push(stateArray[i][1])\n      rotateArray[2].push(stateArray[i][2])\n      rotateArray[3].push(stateArray[i][3])\n    }\n  \n    let rotateBackArrays = []\n    for (let j = 0; j < rotateArray.length; j++){\n      let filters = rotateArray[j].filter(number => number)\n      let filtered = []\n\n      for (let h = 0; h < filters.length; h++){\n        if (filters[h] === filters[h+1]){\n          filtered.push(filters[h] * 2)\n          this.setState(state => {\n          state.score += filters[h]\n          })\n          h++\n        } else filtered.push(filters[h]);\n      }\n\n      let emptyArray = new Array(4 - filtered.length);\n      if (swipe === 'up') {\n        for (let i = 0; i < emptyArray.length; i++){\n        filtered.push(emptyArray[i])\n        }\n\n        rotateBackArrays.push(filtered)\n      } else {\n          for (let i = 0; i < filtered.length; i++){\n            emptyArray.push(filtered[i])\n          }\n          rotateBackArrays.push(emptyArray)\n        }\n    }\n  \n    for (let i = 0; i < rotateBackArrays.length; i++) {\n      let rotateSomeArray = []\n      for (let h = 0; h < rotateBackArrays.length; h++) {\n        rotateSomeArray.push(rotateBackArrays[h][i])\n      }\n\n      exitArrays.push(rotateSomeArray)\n    }\n\n    if (winCheck(exitArrays)) {\n      this.setState({\n        winStatus: true\n      })\n    }\n\n    if (!arrayCheck(exitArrays, stateArray)) {\n      this.refreshArray(exitArrays)\n      setTimeout(() => {\n        generateNumbers(this.state.arrays, this.refreshArray)\n      },300)\n    }\n\n    return arrayCheck(exitArrays)\n  }\n\n  //Left Listening\n\n  swipeLeft = (event) => {\n    if (event.code === 'ArrowLeft'){\n      this.horizontallySwipe('left')\n\n      this.setState({gameStatus: this.horizontallySwipe('left')})\n    }\n  }\n\n  //Right Listening\n\n  swipeRight = (event) => {\n    if (event.code === 'ArrowRight'){\n      this.horizontallySwipe('right')\n      this.setState({gameStatus: this.horizontallySwipe('right')})\n    }\n  }\n\n  //Up Listening\n\n  swipeUp = (event) => {\n    if (event.code === 'ArrowUp'){\n      this.VerticalSwipe('up')\n      this.setState({gameStatus: this.VerticalSwipe('up')})\n    }\n  }\n\n  //Down Listening\n\n  swipeDown = (event) => {\n    if (event.code === 'ArrowDown'){\n      this.VerticalSwipe('down')\n      this.setState({gameStatus: this.VerticalSwipe('down')})\n    }\n  }\n\n  //Rendering...\n\n  render() {\n    const { arrays, score, bestScore, gameStatus, winStatus } = this.state\n    return (\n      <div className=\"game\">\n        <GamePanel score={score} bestScore={bestScore} newGameFunction={this.newGame}/>\n        <GameField arrays={arrays} gameStatus={gameStatus} winStatus={winStatus}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}